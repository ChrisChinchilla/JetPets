<?php

/**
 * @file
 * Short file description here.
 *
 * Long description here.
 */

/**
 * Implements hook_menu().
 */
function jpgf_menu() {

  $items['jpgf/import'] = array(
    'title' => 'Import GF JSON',
    'page callback' => 'jpgf_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    );

  return $items;
}

/**
 * Implements hook_help().
 */
function jpgf_help($path, $arg) {

  switch ($path) {
    case 'admin/help#jpgf':

      // Return a line-break version of the README.
    $readme = file_get_contents(drupal_get_path('module', 'jpgf') . '/README.txt');
    return nl2br($readme);
  }
}

/**
 * Page example callback, referenced in hook_menu().
 *
 * Description of what the page displays.
 * Second line of the description.
 *
 * @return string
 *   The content of the page.
 */
function jpgf_page() {

  $output = process_json();
  dpm($output);
  return $output;

}

function process_json() {
  $context = stream_context_create(array(
   'http' => array(
    'method' => "GET",
    'header' => 'Authorization: Bearer 173709a1f841645f8f1a0e0991f37056'
    )
   ));

  $response =  file_get_contents('https://api.getfeedback.com/surveys/29880/responses', false, $context);

// Check for errors
  if($response === FALSE){
    // die(curl_error($ch));
  }

  else {

// Decode the response

    $responseData = json_decode($response, TRUE);
    $returnData = array();
    foreach ($responseData['active_models'] as $value) {
      if((!empty($value['answers'])) && ($value['status'] == 'completed')) {
       /*
       create a node object and add to watchdog
       We should check if the id already exists
        */
       $query = new EntityFieldQuery();
       $query->entityCondition('entity_type', 'node')
       ->entityCondition('bundle', 'survey_response')
       ->propertyCondition('status', 1)
       ->fieldCondition('field_gf_id', 'value', $value['id'], '=')
       ->range(0, 1)
          ->addMetaData('account', user_load(1)); // Run the query as user 1.

          $result = $query->execute();

          if (!isset($result['node'])) {
            // Create the Contact
            // If the Survey changes, this code will have to change
            // More of the contact fields need to be added to the GF Survey. Maybe?

            $cNode = new stdClass(); // We create a new node object
            $cNode->type = "contact"; // Or any other content type you want
            $cNode->title = $value['answers'][0]['form_fields'][1]['text'] . " " . $value['answers'][0]['form_fields'][2]['text'];
            $cNode->language = LANGUAGE_NONE; // Or any language code if Locale module is enabled. More on this below *
            //$node->path = array('alias' => 'your node path'); // Setting a node path
            $cNode->field_email[LANGUAGE_NONE][0]['value'] = $value['answers'][0]['form_fields'][3]['text'];
            node_object_prepare($cNode); // Set some default values.
            $cNode->uid = 1; // Or any id you wish

            $cNode = node_submit($cNode); // Prepare node for a submit
            node_save($cNode); // After this call we'll get a nid
            watchdog('jpgf', 'New Contact created with ID %nid', array('nid' => $cNode->nid), WATCHDOG_NOTICE);

            //Create the Survey Response
            $srNode = new stdClass(); // We create a new node object
            $srNode->type = "survey_response"; // Or any other content type you want
            $srNode->title = $value['id'];
            $srNode->language = LANGUAGE_NONE; // Or any language code if Locale module is enabled. More on this below *
            //$node->path = array('alias' => 'your node path'); // Setting a node path
            node_object_prepare($srNode); // Set some default values.
            $srNode->uid = 1; // Or any id you wish
            $srNode->field_gf_id[LANGUAGE_NONE][0]['value'] = $value['id'];
            $srNode->field_contact[LANGUAGE_NONE][0]['target_id'] = $cNode->nid;

            $srNode = node_submit($srNode); // Prepare node for a submit
            node_save($srNode); // After this call we'll get a nid
            watchdog('jpgf', 'New Survey Response created with ID %nid', array('nid' => $value['id']), WATCHDOG_NOTICE);

            $returnData[] = $value; // This can probably go?
        } else {
          watchdog('jpgf', 'Node based on this Survey Response has already been created',NULL, WATCHDOG_NOTICE);
        }
      }
    }

    return $returnData;
  }
}

/**
 * Implements hook_page_build().
 *
 * Add JavaScript and CSS code to every page.
 */
function jpgf_page_build() {

  drupal_add_js(drupal_get_path('module', 'jpgf') . '/js/jpgf.js');
  drupal_add_css(drupal_get_path('module', 'jpgf') . '/css/jpgf.css');

}
